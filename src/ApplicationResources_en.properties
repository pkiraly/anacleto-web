
accents.addnew = Add new Conversion rule
accents.delsel = Delete selected
accents.desc   = Use character conversions when you have accented characters in your texts and your users either cannot type these characters (keyboard layout does not contain that character), either they do not know the correct spelling. Es.: the Italian keyboard layout does not contain the character <strong>\u00E7</strong>. If your texts contain this character, you can insert a conversion rule for this character to translate it to a normal <strong>c</strong> character. To get unicode charcters visit: <a strong>Note!</strong> When you introduce a new conversion rule, or delete one it's better to reindex all your books.
accents.reload = Reload default values
accents.title  = Accent Conversions

advancedquery.findres   = Find results
advancedquery.title     = Advanced Query
advancedquery.withall   = With <strong>all</strong> of the words
advancedquery.withexact = With the <strong>exact phrase</strong>
advancedquery.withone   = With <strong>at least</strong> one of the words
advancedquery.without   = <strong>Without</strong> the words

application.nexthit  = Next Hit
application.nextpage = Next Page
application.nextres  = Next Result
application.prevhit  = Previous Hit
application.prevpage = Previous Page
application.prevres  = Previous Result
application.ssearch  = Start search

arcquery.AND                 = AND
arcquery.NOT                 = NOT
arcquery.OR                  = OR
arcquery.acceptSimil         = accept similarities
arcquery.alertNoinput        = No input!
arcquery.alertNoproxDistance = Give me the distance number!
arcquery.domainHead          = Select shelves!
arcquery.exact               = Exact match
arcquery.field               = Field
arcquery.fieldContent        = anywhere
arcquery.fieldCreator        = creator
arcquery.fieldPagenumber     = pagenumber
arcquery.fieldPicture        = picture
arcquery.fieldSearch         = Field search
arcquery.fieldTitle          = title
arcquery.fieldname           = Field name
arcquery.firstletters        = First letters
arcquery.head                = Use this form to compose your queries for typed information like a title of a book, or an author. Use proximity searches when you have two (or more) worlds in a text, at a certain distance of words.
arcquery.head1               = Use this form to compose your queries for typed information like a title of a book, or an author. Use proximity searches when you have two (or more) worlds in a text, at a certain distance of words.
arcquery.head2               = The proximity search enables you to find two or more words in a certain distance.
arcquery.innerOperator       = inside fields
arcquery.interOperator       = among fields
arcquery.pageDown            = Down
arcquery.pageUp              = Up
arcquery.proxDistance        = distance
arcquery.proximity           = proximity
arcquery.searchCriteria      = Search Criteria
arcquery.showIndex           = Show the field's indexed terms
arcquery.startSearch         = Start search
arcquery.termList            = Term list
arcquery.title               = Advanced query

auth.addnew      = Add new user
auth.adminUser   = Administrator
auth.adminUsers  = Administrators
auth.delete      = Delete user
auth.email       = E-mail address
auth.enabled     = User enabled
auth.ipFilter    = IP filtering enabled
auth.modify      = Modify user data
auth.normalUser  = Normal user
auth.normalUsers = Normal users
auth.password    = Password
auth.realName    = User Name
auth.title       = Authentication
auth.user        = User ID
auth.userExists  = User already exists
auth.userType    = User type

bookDetails.title = Book Details

bookmark.bookmarks = bookmarks
bookmark.delete    = delete selected bookmark
bookmark.rename    = rename selected bookmark
bookmark.sync      = syncronize selected bookmark

config.accentsFile                   = <b>Accents File.</b> Accentted character converion file. If you have texts with accents, you can help your users to...
config.booksFile                     = <b>Books File.</b> Book and shelf configuration file. This file is responsable for the content of the site.
config.configdir                     = <b>Configuration Directory.</b> Directory that contains your configuration files. This directory will be the place to store all your configuration files.
config.defaultContentStyleSheet      = <b>Default ContentStyleSheet.</b> Default CSS file to include in the displayed page. (books can overwrite this default value)
config.defaultHtmlIndexingscheme     = <b>Default HtmlIndexingscheme.</b> Default XSLT transformation sheet to index HTML files (books can overwrite this default value)
config.defaultTei2IndexingStyleSheet = <b>Default Tei2IndexingStyleSheet.</b> Default XSLT transformation sheet to index TEI2 ebooks. (books can overwrite this default value)
config.defaultXmlDisplayScheme       = <b>Default XmlDisplayScheme.</b> Default XSLT transformation sheet to display XML content. (books can overwrite this default value)
config.err.booksFile                 = Unable to find configuration file of books and shelves: {0}.
config.err.confDir                   = Inexistent configuration directory: {0}.
config.err.fileCreate                = Unable to create configuration file: {0}.
config.err.indexDir                  = Inexistent index directory: {0}.
config.indexdir                      = <b>Index Directory.</b> Directory that contains your index files. This directory has to be empty. You should not modify or delete files from it. Unless you don't want to use in-memory-indexing, put this to your fastest partition/disk.
config.indexingPriority              = <b>Indexing priority (0-9).</b> Higher value means faster indexing, but slower server performance during the indexing, while a lower value will slow down your indexing speed, but in compense you can use your server also when indexing.
config.indexinmemory                 = <b>Index in Memory.</b> You can place your indexing files in the memory, to make searches faster. If you do it, you have to be sure, that your java VM has the required amount of memory to put the indexing files are into.
config.locale                        = <b>Language.</b> The main language of your texts. The language code will later define the alphabetical order of the indexlists.
config.logdir                        = <b>Log Directory.</b>
config.maxTocEntryNumber             = Maximum number of toc entries to display when a node is opened
config.savebutt                      = Save and apply changes
config.securityLevel                 = <b>Security Level.</b> Set the security level of the application. The first level, is when no users or passwords are required to access the application. The second level is when the admin interface is protected from unauthorized access, the third is when the whole site is protected.
config.securityLevel.1               = No security
config.securityLevel.2               = Admin interface is protected
config.securityLevel.3               = Whole site is protected
config.sort                          = <b>Sort of search results<b>
config.sort.0                        = <b>Sort by relevance<b>
config.sort.1                        = <b>Sort by location in the hierarchy<b>
config.stopWordsFile                 = <b>StopWords File.</b> StopWords file. A file that contains your stopwords. You can configure it with the <strong>Anacleto Administration Interface</strong>, or manually edit it.
config.title                         = Base Anacleto configuration

errors.configuration = Configuration exception
errors.filenotfound  = File not found error
errors.mandatory     = Field is mandatory
errors.suffix        = <br>
errors.writecontent  = Write content error

fieldquery.allfi  = All fields together
fieldquery.authf  = Author
fieldquery.contf  = Content
fieldquery.crite  = Search Criteria
fieldquery.desc   = Use this form to compose your queries for typed information like a title of a book, or an author. Use proximity searches when you have two (or more) worlds in a text, at a certain distance of words.
fieldquery.dist   = Distance
fieldquery.editf  = Editor
fieldquery.exact  = Exact match
fieldquery.field  = Field Name
fieldquery.prox   = Proximity
fieldquery.pubaf  = Published at
fieldquery.pubif  = Published in
fieldquery.publf  = Publisher
fieldquery.simila = Accept similarities
fieldquery.title  = Field Query Constructor
fieldquery.titlef = Title

footer.copy    = Copyright &copy; <a href="http://www.arcanum.hu" target="_blank">Arcanum Database Ltd.</a>, <a href="http://www.tesuji.eu" target="_blank">Tesuji Ltd.</a> All rights reserved.
footer.visitus = Visit us

header.accents        = Accents
header.advquery       = Advanced Query
header.arcquery       = Arcanum Query
header.authentication = Authentication
header.conf           = Base configuration
header.fieldquery     = Field Query
header.home           = Home
header.indexmaint     = Index Maintenance
header.indstat        = Index Statistics
header.logViewer      = Log Viewer
header.logout         = Logout
header.stopwords      = Stop Words
header.termquery      = Term Query
header.xmledit        = Mount, unmount content

index.title        = Anacleto

indexDetails.title = Indexing Details of a page

indmaint.booktitle = Title
indmaint.name      = Name
indmaint.pagenum   = Number of indexed documents
indmaint.title     = Index Maintenance
indmaint.url       = Location

indstat.desc      = Use this form to create your own stop word list
indstat.field     = Field
indstat.fielddesc = <strong>Field</strong> is the place where the term is indexed.
indstat.numTerms  = Number of <strong>Terms</strong> to display
indstat.occur     = Occurance
indstat.occurdesc = <strong>Occurrance</strong> gives you the number of times a term occurs.
indstat.term      = Term
indstat.termdesc  = <strong>Term</strong> is an indexed word.
indstat.title     = Index Statistics - most frequent terms

loading.load  = Please wait a minute, the file is loading...
loading.title = Please wait a minute, the file is loading...

login.message           = The usage of the database is available after <b>registration</b>. You just have to contact us personally in our office or by phone or by email for user name and pasword.<br />\r\n\r\nIf you have any question or note, please wrote an <a href="mailto:ambrus@arcanum.hu">email</a>!<br />
login.password          = Password
login.title             = Please log in....
login.user              = User

loginerror.goback       = Go back to the login
loginerror.ip           = You are already logged in from an other ip
loginerror.message      = Please check supplied information and try again.
loginerror.title        = Error occured during login
loginerror.userpassword = Incorrect username or password

logout.confirm = You are logged out of Anacleto
logout.title   = Logging you out...

logs.eventClass   = Class
logs.eventMessage = Message
logs.eventTime    = Time

navigationSelector.bookmark     = Bookmark
navigationSelector.contents     = Contents
navigationSelector.filteredTree = Contents filtered by search result

searchres.crite       = Search Criteria
searchres.disp        = Displaying:
searchres.docsin      = documents in
searchres.found       = Found:
searchres.menuSych    = Filter menu for the search results
searchres.nextPage    = Next page
searchres.prevPage    = Previous page
searchres.respp       = Results Per Page
searchres.search      = Search
searchres.secs        = seconds
searchres.startSearch = Start Search
searchres.title       = Search Results

showdoc.addBookMark = Add Bookmark
showdoc.backres     = hitlist
showdoc.booknav     = pages
showdoc.docnav      = results in document
showdoc.menusync    = Synchronize Menu
showdoc.print       = Print Document
showdoc.resnav      = search results
showdoc.title       = Document

stopWords.addnew = Add new StopWord
stopWords.delsel = Delete selected StopWords
stopWords.title  = StopWords configuration

termquery.browsererr = Sorry, your browser doesn't support iframes.
termquery.desc       = This form gives you the possibility to cunstruct your query based on existing <strong>terms</strong> of your indexed resources. The indexed resources are categorized by <strong>fields</strong>. You can also filter the list of terms by selecting the field.
termquery.field      = Field
termquery.freq       = Frequency
termquery.search     = Start search with the selected terms, or just go to the search page
termquery.select     = Select to include in the query
termquery.term       = Term
termquery.title      = Term Query Constructor

tree.forward       = forward
tree.loading       = loading...
tree.noResult      = no result

treehead.queryterm = Query term
treehead.resclick  = Doubleclick on the node that you want to explode
treehead.resdesc   = Shows all your mounted resources in hierarchical\u0009order. Resources can be structured, or unstructured. Structured resources have a definition file that describes their attributes while the unstructured ones follow their natural hierarchy.
treehead.resources = Resources

welcome.arcanum   = Arcanum Database Ltd.
welcome.epilog    = The present <strong>Anacleto 1.0</strong> version uses a database of  Italian literature and Hungarian history with <strong>more than 500.000 pages</strong>. The Italian literature part is composed by 1.102 books (approximately 200.000 pages) owned by the Biblioteca Italiana Project (www.bibliotecaitaliana.it). The history archive (Hungarian and universal) is owned by the ARCANUM kft. (www.arcanum.hu). <br> <strong>We do not intend to sell or otherwise abuse this material.</strong>
welcome.epilog.1  = The databases of <a href="http://www.arcanum.hu" target="_blank">Arcanum</a> are published with Anacleto 1.0 from <a href="http://www.tesuji.eu" target="_blank">Tesuji</a>
welcome.epilog.2  = You can freely browse the sources of the collection (opening and closing the branches by clicking the plus sign) on the table of contents (left pane). The usage of the database (searching and reading of documents is available after registring and payment.
welcome.epilog.3  = If you want to subscribe, please write us an <a href="mailto:arcadat@t-online.hu">e-mail</a> and we'll inform you about the method of registration and payment.
welcome.epilog.4  = The price is 20 \u20AC per months.
welcome.gutenberg = The present <strong>Anacleto 1.0</strong> version includes all the text of the <ahref="http://www.gutenberg.cc">Project Gutenberg Consortia Center</a> which is <strong>more than 6 Gigabyte text (approx. 3 000 000 book page)</strong>.<br> <strong>We do not intend to sell or otherwise abuse this material.</strong>
welcome.head      = Arcanum textbook: the ultimate Hungarian cultural collection
welcome.helpus    = <strong>Anacleto</strong> is a living, evolving product. Please send us your suggestions and report any bug to <a href="mailto:arcadat@t-online.hu">arcadat@t-online.hu</a> or <a href="mailto:info@tesuji.eu">info@tesuji.eu</a>. Thank you.
welcome.ideal     = You need <strong>Anacleto</strong> if you are:
welcome.ideal.1   = content provider
welcome.ideal.2   = library, research institute, university
welcome.ideal.3   = company with large quantity of structured or unstructured digital information
welcome.intro.1   = <strong>Anacleto</strong> is
welcome.intro.2   = a quick semantic information finder
welcome.intro.3   = a tool to present and publish illimited amount of text in user friendly manner
welcome.intro.4   = a document manager system with pre-defined indexing and searching schemas for TEI dtd (prose, poetry, drama, dictionary etc.), HTML, XML, MS Word, MS Excel, Pdf documents. Further formats can be added on demand.
welcome.open      = <strong>Anacleto</strong> is an exclusively Open Source product, based on Jakarta Lucene indexing engine and Tomcat servlet container. It is a 100% Web based Java application, runing on any operating system that has Java support.
welcome.person    = The search forms, as the user interface of <strong>Anacleto</strong> are highly customisable.
welcome.search    = Search functionalities provided in the present version of <strong>Anacleto</strong> are:
welcome.search.1  = <i>simple term</i> query, based on existing indexed terms
welcome.search.2  = <i>field query</i>, based on the category fields defined for the indexing. With this function you can search for exact match, similarity search, and proximity searches for all fields
welcome.search.3  = Google like advanced query
welcome.search.4  = fuzzy search
welcome.search.5  = word stemming
welcome.search.6  = logical search with including and excluding words
welcome.textbook  = Arcanum Textbook

xmledit.actions                 = actions
xmledit.addElementAfter         = add new element after this
xmledit.addElementBefore        = add new element before this
xmledit.addFirstSubelement      = add new child as first element
xmledit.addLastSubelement       = add new child element
xmledit.close                   = Close dialog
xmledit.createNew               = create a new sibling or children
xmledit.delete                  = Delete
xmledit.exportXml               = Export to XML
xmledit.importXml               = Import from XML
xmledit.modify                  = Modify
xmledit.move                    = Move
xmledit.moveDown.DownChildFirst = as the first child of the next
xmledit.moveDown.DownChildLast  = as the last child of the next
xmledit.moveDown.UpChildFirst   = as the first child of the previous
xmledit.moveDown.UpChildLast    = as the last child of the previous
xmledit.moveDown.title          = move element one level down
xmledit.moveElementDown         = move element down
xmledit.moveElementFirst        = move element to the first position
xmledit.moveElementLast         = move element to the last position
xmledit.moveElementUp           = move element up
xmledit.moveParent.Down         = down
xmledit.moveParent.First        = to the first position
xmledit.moveParent.Last         = to the last position
xmledit.moveParent.Up           = up
xmledit.moveParent.title        = move element one level up then
xmledit.new                     = New
xmledit.saveAndApply            = Save and apply
